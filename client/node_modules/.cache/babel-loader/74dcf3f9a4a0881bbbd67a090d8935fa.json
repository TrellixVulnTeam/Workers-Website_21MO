{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yes\\\\Desktop\\\\WorkersWebsite\\\\client\\\\src\\\\components\\\\pages\\\\About.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/** The prompt content component */\nclass Prompt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.defaultValue\n    };\n\n    this.onChange = e => this._onChange(e);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.value !== this.state.value) {\n      this.props.onChange(this.state.value);\n    }\n  }\n\n  _onChange(e) {\n    let value = e.target.value;\n    this.setState({\n      value: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: this.props.placeholder,\n      className: \"mm-popup__input\",\n      value: this.state.value,\n      onChange: this.onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n/** Prompt plugin */\n\n\nPopup.registerPlugin('prompt', function (defaultValue, placeholder, callback) {\n  let promptValue = null;\n\n  let promptChange = function (value) {\n    promptValue = value;\n  };\n\n  this.create({\n    title: 'What\\'s your name?',\n    content: /*#__PURE__*/_jsxDEV(Prompt, {\n      onChange: promptChange,\n      placeholder: placeholder,\n      value: defaultValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this),\n    buttons: {\n      left: ['cancel'],\n      right: [{\n        text: 'Save',\n        key: '⌘+s',\n        className: 'success',\n        action: function () {\n          callback(promptValue);\n          Popup.close();\n        }\n      }]\n    }\n  });\n});\n/** Call the plugin */\n\nPopup.plugins().prompt('', 'Type your name', function (value) {\n  Popup.alert('You typed: ' + value);\n});","map":{"version":3,"sources":["C:/Users/yes/Desktop/WorkersWebsite/client/src/components/pages/About.js"],"names":["Prompt","React","Component","constructor","props","state","value","defaultValue","onChange","e","_onChange","componentDidUpdate","prevProps","prevState","target","setState","render","placeholder","Popup","registerPlugin","callback","promptValue","promptChange","create","title","content","buttons","left","right","text","key","className","action","close","plugins","prompt","alert"],"mappings":";;;AAAA;AACA,MAAMA,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG;AADT,KAAb;;AAIA,SAAKC,QAAL,GAAiBC,CAAD,IAAO,KAAKC,SAAL,CAAeD,CAAf,CAAvB;AACH;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAIA,SAAS,CAACP,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAA0C;AACtC,WAAKF,KAAL,CAAWI,QAAX,CAAoB,KAAKH,KAAL,CAAWC,KAA/B;AACH;AACJ;;AAEDI,EAAAA,SAAS,CAACD,CAAD,EAAI;AACT,QAAIH,KAAK,GAAGG,CAAC,CAACK,MAAF,CAASR,KAArB;AAEA,SAAKS,QAAL,CAAc;AAACT,MAAAA,KAAK,EAAEA;AAAR,KAAd;AACH;;AAEDU,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWa,WAA3C;AAAwD,MAAA,SAAS,EAAC,iBAAlE;AAAoF,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,KAAtG;AAA6G,MAAA,QAAQ,EAAE,KAAKE;AAA5H;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAzBgC;AA4BrC;;;AACAU,KAAK,CAACC,cAAN,CAAqB,QAArB,EAA+B,UAAUZ,YAAV,EAAwBU,WAAxB,EAAqCG,QAArC,EAA+C;AAC1E,MAAIC,WAAW,GAAG,IAAlB;;AACA,MAAIC,YAAY,GAAG,UAAUhB,KAAV,EAAiB;AAChCe,IAAAA,WAAW,GAAGf,KAAd;AACH,GAFD;;AAIA,OAAKiB,MAAL,CAAY;AACRC,IAAAA,KAAK,EAAE,oBADC;AAERC,IAAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEH,YAAlB;AAAgC,MAAA,WAAW,EAAEL,WAA7C;AAA0D,MAAA,KAAK,EAAEV;AAAjE;AAAA;AAAA;AAAA;AAAA,YAFD;AAGRmB,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,CAAC,QAAD,CADD;AAELC,MAAAA,KAAK,EAAE,CAAC;AACJC,QAAAA,IAAI,EAAE,MADF;AAEJC,QAAAA,GAAG,EAAE,KAFD;AAGJC,QAAAA,SAAS,EAAE,SAHP;AAIJC,QAAAA,MAAM,EAAE,YAAY;AAChBZ,UAAAA,QAAQ,CAACC,WAAD,CAAR;AACAH,UAAAA,KAAK,CAACe,KAAN;AACH;AAPG,OAAD;AAFF;AAHD,GAAZ;AAgBH,CAtBD;AAwBA;;AACAf,KAAK,CAACgB,OAAN,GAAgBC,MAAhB,CAAuB,EAAvB,EAA2B,gBAA3B,EAA6C,UAAU7B,KAAV,EAAiB;AAC1DY,EAAAA,KAAK,CAACkB,KAAN,CAAY,gBAAgB9B,KAA5B;AACH,CAFD","sourcesContent":["/** The prompt content component */\r\nclass Prompt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: this.props.defaultValue\r\n        };\r\n\r\n        this.onChange = (e) => this._onChange(e);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.value !== this.state.value) {\r\n            this.props.onChange(this.state.value);\r\n        }\r\n    }\r\n\r\n    _onChange(e) {\r\n        let value = e.target.value;\r\n\r\n        this.setState({value: value});\r\n    }\r\n\r\n    render() {\r\n        return <input type=\"text\" placeholder={this.props.placeholder} className=\"mm-popup__input\" value={this.state.value} onChange={this.onChange} />;\r\n    }\r\n}\r\n\r\n/** Prompt plugin */\r\nPopup.registerPlugin('prompt', function (defaultValue, placeholder, callback) {\r\n    let promptValue = null;\r\n    let promptChange = function (value) {\r\n        promptValue = value;\r\n    };\r\n\r\n    this.create({\r\n        title: 'What\\'s your name?',\r\n        content: <Prompt onChange={promptChange} placeholder={placeholder} value={defaultValue} />,\r\n        buttons: {\r\n            left: ['cancel'],\r\n            right: [{\r\n                text: 'Save',\r\n                key: '⌘+s',\r\n                className: 'success',\r\n                action: function () {\r\n                    callback(promptValue);\r\n                    Popup.close();\r\n                }\r\n            }]\r\n        }\r\n    });\r\n});\r\n\r\n/** Call the plugin */\r\nPopup.plugins().prompt('', 'Type your name', function (value) {\r\n    Popup.alert('You typed: ' + value);\r\n});"]},"metadata":{},"sourceType":"module"}