{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yes\\\\Desktop\\\\WorkersWebsite\\\\client\\\\src\\\\components\\\\pages\\\\About.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0\n};\n\nfunction success(pos) {\n  var crd = pos.coords;\n  console.log(\"Your current position is:\");\n  console.log(`Latitude : ${crd.latitude}`);\n  console.log(`Longitude: ${crd.longitude}`);\n  console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errors(err) {\n  console.warn(`ERROR(${err.code}): ${err.message}`);\n}\n\nexport class About extends Component {\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.permissions.query({\n        name: \"geolocation\"\n      }).then(function (result) {\n        if (result.state === \"granted\") {\n          console.log(result.state); //If granted then you can directly call your function here\n\n          navigator.geolocation.getCurrentPosition(success);\n        } else if (result.state === \"prompt\") {\n          navigator.geolocation.getCurrentPosition(success, errors, options);\n        } else if (result.state === \"denied\") {//If denied then you have to show instructions to enable location\n        }\n\n        result.onchange = function () {\n          console.log(result.state);\n        };\n      });\n    } else {\n      alert(\"Sorry Not available!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"GeoLocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default About;","map":{"version":3,"sources":["C:/Users/yes/Desktop/WorkersWebsite/client/src/components/pages/About.js"],"names":["React","Component","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","console","log","latitude","longitude","accuracy","errors","err","warn","code","message","About","componentDidMount","navigator","geolocation","permissions","query","name","then","result","state","getCurrentPosition","onchange","alert","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,kBAAkB,EAAE,IADR;AAEZC,EAAAA,OAAO,EAAE,IAFG;AAGZC,EAAAA,UAAU,EAAE;AAHA,CAAd;;AAKA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAIC,GAAG,GAAGD,GAAG,CAACE,MAAd;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaH,GAAG,CAACI,QAAS,EAAvC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaH,GAAG,CAACK,SAAU,EAAxC;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeH,GAAG,CAACM,QAAS,UAAzC;AACD;;AAED,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnBN,EAAAA,OAAO,CAACO,IAAR,CAAc,SAAQD,GAAG,CAACE,IAAK,MAAKF,GAAG,CAACG,OAAQ,EAAhD;AACD;;AAED,OAAO,MAAOC,KAAP,SAAqBnB,SAArB,CAA+B;AAEpCoB,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACE,WAAV,CACGC,KADH,CACS;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADT,EAEGC,IAFH,CAEQ,UAAUC,MAAV,EAAkB;AACtB,YAAIA,MAAM,CAACC,KAAP,KAAiB,SAArB,EAAgC;AAC9BnB,UAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAM,CAACC,KAAnB,EAD8B,CAE9B;;AACAP,UAAAA,SAAS,CAACC,WAAV,CAAsBO,kBAAtB,CAAyCxB,OAAzC;AACD,SAJD,MAIO,IAAIsB,MAAM,CAACC,KAAP,KAAiB,QAArB,EAA+B;AACpCP,UAAAA,SAAS,CAACC,WAAV,CAAsBO,kBAAtB,CAAyCxB,OAAzC,EAAkDS,MAAlD,EAA0Db,OAA1D;AACD,SAFM,MAEA,IAAI0B,MAAM,CAACC,KAAP,KAAiB,QAArB,EAA+B,CACpC;AACD;;AACDD,QAAAA,MAAM,CAACG,QAAP,GAAkB,YAAY;AAC5BrB,UAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAM,CAACC,KAAnB;AACD,SAFD;AAGD,OAfH;AAgBD,KAjBD,MAiBO;AACLG,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA/BmC;AAiCtC,eAAeb,KAAf","sourcesContent":["import React, {Component} from 'react';\r\nvar options = {\r\n  enableHighAccuracy: true,\r\n  timeout: 5000,\r\n  maximumAge: 0,\r\n};\r\nfunction success(pos) {\r\n  var crd = pos.coords;\r\n\r\n  console.log(\"Your current position is:\");\r\n  console.log(`Latitude : ${crd.latitude}`);\r\n  console.log(`Longitude: ${crd.longitude}`);\r\n  console.log(`More or less ${crd.accuracy} meters.`);\r\n}\r\n\r\nfunction errors(err) {\r\n  console.warn(`ERROR(${err.code}): ${err.message}`);\r\n}\r\n\r\nexport class  About extends Component {\r\n\r\n  componentDidMount() {\r\n    if (navigator.geolocation) {\r\n      navigator.permissions\r\n        .query({ name: \"geolocation\" })\r\n        .then(function (result) {\r\n          if (result.state === \"granted\") {\r\n            console.log(result.state);\r\n            //If granted then you can directly call your function here\r\n            navigator.geolocation.getCurrentPosition(success);\r\n          } else if (result.state === \"prompt\") {\r\n            navigator.geolocation.getCurrentPosition(success, errors, options);\r\n          } else if (result.state === \"denied\") {\r\n            //If denied then you have to show instructions to enable location\r\n          }\r\n          result.onchange = function () {\r\n            console.log(result.state);\r\n          };\r\n        });\r\n    } else {\r\n      alert(\"Sorry Not available!\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>GeoLocation</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default About;"]},"metadata":{},"sourceType":"module"}