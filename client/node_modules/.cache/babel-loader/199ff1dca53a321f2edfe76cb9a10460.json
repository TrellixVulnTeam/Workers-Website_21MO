{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yes\\\\Desktop\\\\WorkersWebsite\\\\client\\\\src\\\\components\\\\pages\\\\About.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\"; //import reat-datepicker module\n\nimport \"react-datepicker/dist/react-datepicker.css\"; //import reat-datepicker css\n\nimport { FiCalendar } from \"react-icons/fi\"; //import calendar icon from reat-icon \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  display: \"flex\",\n  justifyContent: \"space-evenly\",\n  height: \"5rem\",\n  width: \"30rem\",\n  color: \"#32e0c4\",\n  cursor: \"pointer\",\n  background: \"#293B50\",\n  paddingTop: \"2rem\"\n};\n/**\r\n   * Customizing UI Component for the datepicker \r\n   * In this case i want to use a calendar icon as the date user interface\r\n   * **NOTE onClick is passed to the component as props. \r\n   */\n\nconst DatePickerCustomInput = onClick => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"calendar_icon\",\n  children: /*#__PURE__*/_jsxDEV(FiCalendar, {\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 75\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 44\n}, this);\n\n_c = DatePickerCustomInput;\nconst ref = /*#__PURE__*/React.createRef(); // we need to add a Dom ref to the new Component to avoid Dom reffrence Error\n\nconst DatePickerCalendarIcon = () => {\n  _s();\n\n  const [selectedDate, setSelectedDate] = useState(\"\"); // called when a user selects a date and upsate the \"selectedDate\" state\n\n  const handleSelectedDate = date => {\n    setSelectedDate(date);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datepicker-wrapper\",\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this), \" \", selectedDate ? selectedDate.toDateString() : \"     \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"datepicker\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: handleSelectedDate,\n        customInput: /*#__PURE__*/_jsxDEV(DatePickerCustomInput, {\n          ref: ref\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this),\n        dateFormat: \"yyyy/MM/dd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DatePickerCalendarIcon, \"X+343bWD8vGlMCAq1//cBGL6GcI=\");\n\n_c2 = DatePickerCalendarIcon;\nexport default DatePickerCalendarIcon;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DatePickerCustomInput\");\n$RefreshReg$(_c2, \"DatePickerCalendarIcon\");","map":{"version":3,"sources":["C:/Users/yes/Desktop/WorkersWebsite/client/src/components/pages/About.js"],"names":["React","DatePicker","FiCalendar","style","display","justifyContent","height","width","color","cursor","background","paddingTop","DatePickerCustomInput","onClick","ref","createRef","DatePickerCalendarIcon","selectedDate","setSelectedDate","useState","handleSelectedDate","date","toDateString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB,C,CAA2C;;AAC3C,OAAO,4CAAP,C,CAAqD;;AACrD,SAASC,UAAT,QAA2B,gBAA3B,C,CAA4C;;;AAE5C,MAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,MADC;AAEVC,EAAAA,cAAc,EAAE,cAFN;AAGVC,EAAAA,MAAM,EAAE,MAHE;AAIVC,EAAAA,KAAK,EAAE,OAJG;AAKVC,EAAAA,KAAK,EAAE,SALG;AAMVC,EAAAA,MAAM,EAAE,SANE;AAOVC,EAAAA,UAAU,EAAE,SAPF;AAQVC,EAAAA,UAAU,EAAE;AARF,CAAd;AAWA;AACA;AACA;AACA;AACA;;AACA,MAAMC,qBAAqB,GAAIC,OAAD,iBAAa;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA,yBAA+B,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,QAA3C;;KAAMD,qB;AAEN,MAAME,GAAG,gBAAGd,KAAK,CAACe,SAAN,EAAZ,C,CAA+B;;AAE/B,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AAEjC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,EAAD,CAAhD,CAFiC,CAIjC;;AACA,QAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACjCH,IAAAA,eAAe,CAACG,IAAD,CAAf;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,KAAK,EAAElB,KAA3C;AAAA,4BACG;AAAM,MAAA,KAAK,EAAE;AAACK,QAAAA,KAAK,EAAC;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,OAC+CS,YAAY,GAAGA,YAAY,CAACK,YAAb,EAAH,GAAiC,OAD5F,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,UAAD;AACI,QAAA,QAAQ,EAAEL,YADd;AAEI,QAAA,QAAQ,EAAEG,kBAFd;AAGI,QAAA,WAAW,eAAE,QAAC,qBAAD;AAAuB,UAAA,GAAG,EAAEN;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHjB;AAII,QAAA,UAAU,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CArBD;;GAAME,sB;;MAAAA,sB;AAuBN,eAAeA,sBAAf","sourcesContent":["import React from \"react\";\r\nimport DatePicker from \"react-datepicker\"; //import reat-datepicker module\r\nimport \"react-datepicker/dist/react-datepicker.css\"; //import reat-datepicker css\r\nimport { FiCalendar } from \"react-icons/fi\";//import calendar icon from reat-icon \r\n\r\nconst style = {\r\n    display: \"flex\", \r\n    justifyContent: \"space-evenly\", \r\n    height: \"5rem\",\r\n    width: \"30rem\",\r\n    color: \"#32e0c4\",\r\n    cursor: \"pointer\",\r\n    background: \"#293B50\",\r\n    paddingTop: \"2rem\"\r\n}\r\n\r\n/**\r\n   * Customizing UI Component for the datepicker \r\n   * In this case i want to use a calendar icon as the date user interface\r\n   * **NOTE onClick is passed to the component as props. \r\n   */\r\nconst DatePickerCustomInput = (onClick) => <div className=\"calendar_icon\"><FiCalendar onClick={onClick} /></div>;\r\n\r\nconst ref = React.createRef(); // we need to add a Dom ref to the new Component to avoid Dom reffrence Error\r\n\r\nconst DatePickerCalendarIcon = () => {\r\n\r\n    const [selectedDate, setSelectedDate] = useState(\"\");\r\n\r\n    // called when a user selects a date and upsate the \"selectedDate\" state\r\n    const handleSelectedDate = (date) => {\r\n        setSelectedDate(date);\r\n    }\r\n    return (\r\n        <div className=\"datepicker-wrapper\" style={style} >\r\n           <span style={{color:\"white\"}}>Date:</span> {selectedDate ? selectedDate.toDateString() : \"     \"}\r\n            <div className=\"datepicker\" >\r\n                <DatePicker\r\n                    selected={selectedDate}\r\n                    onChange={handleSelectedDate}\r\n                    customInput={<DatePickerCustomInput ref={ref}/>}\r\n                    dateFormat=\"yyyy/MM/dd\" \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DatePickerCalendarIcon"]},"metadata":{},"sourceType":"module"}